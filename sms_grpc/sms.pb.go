// Code generated by protoc-gen-go.
// source: sms.proto
// DO NOT EDIT!

/*
Package sms_grpc is a generated protocol buffer package.

It is generated from these files:
	sms.proto

It has these top-level messages:
	SMSReq
	FailReq
	SMSResp
*/
package sms_grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SMSReq struct {
	Category     string   `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	TemplateID   string   `protobuf:"bytes,2,opt,name=templateID" json:"templateID,omitempty"`
	PhoneNumbers []string `protobuf:"bytes,3,rep,name=phoneNumbers" json:"phoneNumbers,omitempty"`
	Args         []string `protobuf:"bytes,4,rep,name=args" json:"args,omitempty"`
}

func (m *SMSReq) Reset()                    { *m = SMSReq{} }
func (m *SMSReq) String() string            { return proto.CompactTextString(m) }
func (*SMSReq) ProtoMessage()               {}
func (*SMSReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FailReq struct {
	PhoneNumber string `protobuf:"bytes,1,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	FailReason  string `protobuf:"bytes,2,opt,name=failReason" json:"failReason,omitempty"`
}

func (m *FailReq) Reset()                    { *m = FailReq{} }
func (m *FailReq) String() string            { return proto.CompactTextString(m) }
func (*FailReq) ProtoMessage()               {}
func (*FailReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SMSResp struct {
	Code    int32      `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Id      string     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Message string     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Fail    []*FailReq `protobuf:"bytes,4,rep,name=fail" json:"fail,omitempty"`
}

func (m *SMSResp) Reset()                    { *m = SMSResp{} }
func (m *SMSResp) String() string            { return proto.CompactTextString(m) }
func (*SMSResp) ProtoMessage()               {}
func (*SMSResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SMSResp) GetFail() []*FailReq {
	if m != nil {
		return m.Fail
	}
	return nil
}

func init() {
	proto.RegisterType((*SMSReq)(nil), "sms_grpc.SMSReq")
	proto.RegisterType((*FailReq)(nil), "sms_grpc.FailReq")
	proto.RegisterType((*SMSResp)(nil), "sms_grpc.SMSResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for SMSSender service

type SMSSenderClient interface {
	Send(ctx context.Context, in *SMSReq, opts ...grpc.CallOption) (*SMSResp, error)
}

type sMSSenderClient struct {
	cc *grpc.ClientConn
}

func NewSMSSenderClient(cc *grpc.ClientConn) SMSSenderClient {
	return &sMSSenderClient{cc}
}

func (c *sMSSenderClient) Send(ctx context.Context, in *SMSReq, opts ...grpc.CallOption) (*SMSResp, error) {
	out := new(SMSResp)
	err := grpc.Invoke(ctx, "/sms_grpc.SMSSender/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SMSSender service

type SMSSenderServer interface {
	Send(context.Context, *SMSReq) (*SMSResp, error)
}

func RegisterSMSSenderServer(s *grpc.Server, srv SMSSenderServer) {
	s.RegisterService(&_SMSSender_serviceDesc, srv)
}

func _SMSSender_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMSReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SMSSenderServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sms_grpc.SMSSender/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SMSSenderServer).Send(ctx, req.(*SMSReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SMSSender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sms_grpc.SMSSender",
	HandlerType: (*SMSSenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _SMSSender_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("sms.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x6d, 0x1b, 0x9b, 0x66, 0x2a, 0x62, 0xe7, 0xb4, 0xf4, 0x20, 0x61, 0x41, 0xf0, 0x62,
	0x0e, 0xf5, 0xe6, 0x59, 0x04, 0x11, 0x3d, 0x24, 0x3f, 0x40, 0xb6, 0xc9, 0x1a, 0x0b, 0x4d, 0x76,
	0xdd, 0x89, 0x07, 0xc1, 0x1f, 0xef, 0xee, 0x98, 0xd8, 0xd8, 0xdb, 0x9b, 0x37, 0x2f, 0x33, 0x5f,
	0x66, 0x21, 0xa1, 0x86, 0x32, 0xeb, 0x4c, 0x67, 0x70, 0xe1, 0xe5, 0x6b, 0xed, 0x6c, 0x29, 0xbf,
	0x61, 0x5e, 0x3c, 0x17, 0xb9, 0xfe, 0xc0, 0x35, 0x2c, 0x4a, 0xd5, 0xe9, 0xda, 0xb8, 0x2f, 0x31,
	0x49, 0x27, 0xd7, 0x49, 0xfe, 0x57, 0xe3, 0x25, 0x40, 0xa7, 0x1b, 0xbb, 0xf7, 0xf5, 0xe3, 0xbd,
	0x98, 0x72, 0x77, 0xe4, 0xa0, 0x84, 0x33, 0xfb, 0x6e, 0x5a, 0xfd, 0xf2, 0xd9, 0x6c, 0xb5, 0x23,
	0x31, 0x4b, 0x67, 0x3e, 0xf1, 0xcf, 0x43, 0x84, 0x48, 0xb9, 0x9a, 0x44, 0xc4, 0x3d, 0xd6, 0xf2,
	0x09, 0xe2, 0x07, 0xb5, 0xdb, 0x87, 0xf5, 0x29, 0x2c, 0x47, 0xf1, 0x9e, 0x60, 0x6c, 0x05, 0x88,
	0x37, 0x0e, 0x2b, 0x32, 0xed, 0x00, 0x71, 0x70, 0x64, 0x0b, 0x31, 0xff, 0x0a, 0xd9, 0xb0, 0xab,
	0x34, 0x95, 0xe6, 0x29, 0xa7, 0x39, 0x6b, 0x3c, 0x87, 0xe9, 0xae, 0xea, 0x3f, 0xf3, 0x0a, 0x05,
	0xc4, 0x8d, 0x26, 0x52, 0xb5, 0xf6, 0xb8, 0xc1, 0x1c, 0x4a, 0xbc, 0x82, 0x28, 0x8c, 0x65, 0xd2,
	0xe5, 0x66, 0x95, 0x0d, 0xc7, 0xca, 0x7a, 0xd6, 0x9c, 0xdb, 0x9b, 0x3b, 0x48, 0xfc, 0xbe, 0x42,
	0xb7, 0x95, 0x87, 0xbb, 0x81, 0x28, 0x28, 0xbc, 0x38, 0xa4, 0x7f, 0xef, 0xba, 0x5e, 0x1d, 0x39,
	0x64, 0xe5, 0xc9, 0x76, 0xce, 0xef, 0x70, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x9f, 0x02,
	0x4c, 0x94, 0x01, 0x00, 0x00,
}
